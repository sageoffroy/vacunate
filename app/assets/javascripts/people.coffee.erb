

$.fn.extend {
  integrateSelect2: (selector)->
    selector = selector || '.select2'
    $(@).find(selector).select2({
      theme: "bootstrap",
      width: '100%',
      allowClear: false
    })

  integrateDatepicker: (selector)->
    selector = selector || '.datepicker'
    $(@).find(selector).datepicker({
      startView: 2,
      language: "es",
      orientation: "bottom auto",
      autoclose: true,
      clearBtn: true,
      dateFormat: "dd-mm-yyyy"
      endDate: "-4y"
      defaultViewDate: { year: 1980, month: 1, day: 1 }

    })
}



$.fn.render_form_errors = (model_name, errors) ->
  form = this
  $("#new_dependence_of_agent").clear_form_errors()
  $.each(errors, (field, messages) ->
    field = field.substring(field.lastIndexOf(".")+1).replace("_id","")
    console.log "CAMPO: " + field
    input = form.find('input, select, textarea').filter(->
      name = $(this).attr('name')
      campo = name.substring(name.lastIndexOf('[')+1).replace("]","").replace("_id", "")
      return field == campo
    )
    console.log input
    input.closest('.form-group').addClass('has-danger')
    input.addClass('form-control-danger')

    #input.parent().append('<span class="help-block">' + $.map(messages, (m) -> m.charAt(0).toUpperCase() + m.slice(1)).join('<br />') + '</span>')
    toastr["error"](messages)
  )

$.fn.clear_form_errors = () ->
  this.find('.form-group').removeClass('has-danger')
  this.removeClass('form-control-danger')

$.fn.clear_form_fields = () ->
  this.find(':input','#new_dependence_of_agent')
      .not(':button, :submit, :reset, :hidden')
      .val('')
      .removeAttr('checked')
      .removeAttr('selected')



Number::format = (n, x, s, c) ->
  re = '\\d(?=(\\d{' + (x or 3) + '})+' + (if n > 0 then '\\D' else '$') + ')'
  num = @toFixed(Math.max(0, ~ ~n))
  (if c then num.replace('.', c) else num).replace new RegExp(re, 'g'), '$&' + (s or ',')

$(document).ready ->
  $('[data-toggle="tooltip"]').tooltip()
  form = $('form')
  form.integrateSelect2()
  form.integrateDatepicker()

  document.getElementById('person_phone').addEventListener 'input', (e) ->
    x = e.target.value.replace(/\D/g, '').match(/(\d{0,8})/)
    e.target.value = x[1]
    return

  document.getElementById('person_phone_code').addEventListener 'input', (e) ->
    x = e.target.value.replace(/\D/g, '').match(/(\d{0,4})/)
    e.target.value = x[1]
    return

  document.getElementById('person_dni').addEventListener 'input', (e) ->
    x = e.target.value.replace(/\D/g, '')
    e.target.value = x
    return
  



$(document).on 'turbolinks:load', ->
  $('[data-toggle="tooltip"]').tooltip()
  datatable = $('.datatable')
  datatable.DataTable
    'language': 'url': '//cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/Spanish.json'
    'bPaginate': true
    'info': false
    'responsive': true
    'deferRender': true
    'stateSave': true

  form = $('form')
  form.integrateSelect2()
  form.integrateDatepicker()

  document.getElementById('person_phone').addEventListener 'input', (e) ->
    x = e.target.value.replace(/\D/g, '').match(/(\d{0,8})/)
    e.target.value = x[1]
    return

  document.getElementById('person_phone_code').addEventListener 'input', (e) ->
    x = e.target.value.replace(/\D/g, '').match(/(\d{0,4})/)
    e.target.value = x[1]
    return

  document.getElementById('person_dni').addEventListener 'input', (e) ->
    x = e.target.value.replace(/\D/g, '')
    e.target.value = x
    return



$ ->
  $('[data-toggle="tooltip"]').tooltip()



$(document).on 'turbolinks:before-cache', ->
    dataTable =  $($.fn.dataTable.tables(true)).DataTable()
    if (dataTable != null)
     dataTable.destroy();

